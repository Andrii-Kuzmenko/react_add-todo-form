{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","todosWithUser","App","useState","setTodos","newTodoTitle","setNewTodoTitle","newSelectedUser","setNewSelectedUser","isTitleError","setIsTitleError","isUserError","setIsUserError","newId","ids","Math","max","action","method","onSubmit","event","preventDefault","addUser","htmlFor","type","placeholder","value","onChange","validTitle","replace","handleChangeTitle","target","selectedUser","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2aa7b29d.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    id,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FormEvent, SetStateAction, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport './App.scss';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todosWithUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(todosWithUser);\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const [newSelectedUser, setNewSelectedUser] = useState('0');\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserError, setIsUserError] = useState(false);\n\n  const newId = () => {\n    const ids = [...todos].map(todo => todo.id);\n\n    return Math.max(...ids) + 1;\n  };\n\n  const handleChangeTitle = (title: string) => {\n    const validTitle = title.replace(/[^a-zA-Z0-9А-Яа-я ]/g, '');\n\n    setNewTodoTitle(validTitle);\n    setIsTitleError(false);\n  };\n\n  const handleChangeUser = (selectedUser: SetStateAction<string>) => {\n    setNewSelectedUser(selectedUser);\n    setIsUserError(false);\n  };\n\n  const addUser = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!newTodoTitle) {\n      setIsTitleError(true);\n    }\n\n    if (+newSelectedUser < 1) {\n      setIsUserError(true);\n    }\n\n    if (!newTodoTitle || +newSelectedUser < 1) {\n      return;\n    }\n\n    const todo: Todo = {\n      id: newId(),\n      title: newTodoTitle,\n      completed: false,\n      userId: +newSelectedUser,\n      user: getUser(+newSelectedUser),\n    };\n\n    setTodos([...todos, todo]);\n    setNewTodoTitle('');\n    setNewSelectedUser('0');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => addUser(event)}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            name=\"title\"\n            placeholder=\"Enter a title\"\n            id=\"title\"\n            value={newTodoTitle}\n            onChange={(event) => handleChangeTitle(event.target.value)}\n          />\n          {isTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"select\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            name=\"select\"\n            id=\"select\"\n            value={newSelectedUser}\n            onChange={(event) => handleChangeUser(event.target.value)}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}